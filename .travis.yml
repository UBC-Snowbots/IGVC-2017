# Note: Setting this to `required` will add 20-50s to CI image boot time
sudo: false
dist: trusty
services:
  - docker
language: generic
notifications:
  email:
    recipients:

install:
    # Pull in MoveIt's ROS Docker CI image (piping to `/dev/null` to hide output)
    - DOCKER_IMAGE=moveit/moveit:$ROS_DISTRO-ci
    - echo "Pulling in Docker Image \"$DOCKER_IMAGE\""
    - docker pull $DOCKER_IMAGE > /dev/null
    # Bind the repo to a set location in the docker container
    - docker run
      --volume $(pwd):/root/cloned_repo 
      $DOCKER_IMAGE
      /bin/bash -c "cd /root/cloned_repo; ./setup_scripts/install_dependencies.sh"


script:
  # Run everything within the docker container we installed
  # - Pass in Environment Variables we need to the container
  # - Bind the location of the Repo to a set location in the Docker image
  # - Use the Docker Image we just pulled
  # - Once in the docker container, run the the CI script
  # TODO: DELETE ME
  #- docker run
  #  --env $REPOSITORY_NAME
  #  --env $RUN_BUILD
  #  --env $RUN_TESTS
  #  --env $RUN_FORMATTING_CHECKS
  #  --env $TRAVIS_PULL_REQUEST
  #  --env $TRAVIS_BRANCH
  #  --volume $(pwd):/root/$REPOSITORY_NAME
  #  $DOCKER_IMAGE
  #  /bin/bash -c "cd /root/$REPOSITORY_NAME; ./run_ci.sh"
  #  TODO: These seem similar? Make them into function calls?
  - |
    if [ "$RUN_BUILD"=="true" ] || [ "$RUN_TESTS"=="true" ]; then 
        # Build the repo in the docker container
        docker run \
          --volume $(pwd):/root/cloned_repo  \
          $DOCKER_IMAGE \
          /bin/bash -c "cd /root/cloned_repo; catkin_make"
    fi
  - |
    if [ "$RUN_TESTS"=="true" ]; then
        # Run the tests in the docker container
        docker run \
          --volume $(pwd):/root/cloned_repo  \
          $DOCKER_IMAGE \
          /bin/bash -c "cd /root/cloned_repo; catkin_make run_tests"
    fi
  - |
    if [ "$RUN_FORMATTING_CHECKS"=="true" ]; then
        # Check formatting in the docker container
        # TODO
    fi

env:
  # Global Variables that are set at the start of every CI run
  global:
    # Get the name of this repository from the `TRAVIS_REPO_SLUG`
    # ex. "UBC-Snowbots/Snowflake" would give "Snowflake"
    - REPOSITORY_NAME=$(basename $TRAVIS_REPO_SLUG)
    - ROS_DISTRO=kinetic 

  # Each entry here (every section starting with a `-`) represents a
  # different CI test
  # The variables here are uniquely set at the start of each different test
  matrix:
    # Test building the repo and running tests
    # NOTE: this is a single test
    - RUN_BUILD="true"
      RUN_TESTS="true"
    # Test Formatting
    - RUN_FORMATTING_CHECKS="true"
